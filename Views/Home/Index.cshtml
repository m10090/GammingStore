@{
    ViewData["Title"] = "Home Page";
    List<string> images=     Directory.GetFiles("wwwroot/images").ToList();
    string filePath = "";

}

@model IEnumerable<gammingStore.Models.Product>


<div class="cards-grid">
@foreach(var item in Model){
    <div class="card">
        @{
            System.Text.RegularExpressions.Regex regex = new System.Text.RegularExpressions.Regex($@"/{item.ProductId.ToString()}\.");
            images.ForEach(f => {
                if (regex.IsMatch(f)){
                    filePath =  f;
                }               
            });
            filePath = filePath.Replace("wwwroot", "");
        }
        <div class="card-img">
          <img src="@(filePath)" class="card-img-top" alt="...">
        </div>
        <div class="card-body">
            <h3 style="color: black;">
              @item.Name
            </h3>
            <p style="color: black;">
              @item.Description
            </p>
            <h5 style="color: black;">
              Price: <span style="text-decoration: line-through;">@((item.OldPrice>0)? item.OldPrice : "")</span> @item.Price
            </h5>
            <h6 style="color: black;">
              Stock:@item.Stock
            </h6>
          <button onclick="addToCart(@item.ProductId)">Buy</button>
    </div>
    </div>
}
</div>
<script>
  'use strict'
  function addToCart(id){
    const cart = JSON.parse(localStorage.getItem('cart')) ?? []
    cart.forEach(item => {
      if(item.id === id){
        item.quantity++
      }
    })
    if(cart.find(item => item.id === id) === undefined){
      cart.push({id, quantity: 1})
    }
    localStorage.setItem('cart', JSON.stringify(cart))
    alert('Added to cart')
  }
</script>

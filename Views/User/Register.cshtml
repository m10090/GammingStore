@{
    ViewData["Title"] = "Create Account";
  
}
@inject Microsoft.AspNetCore.Hosting.IWebHostEnvironment Environment
<div id="register" class="form">
    <label for="fullName">Full Name</label>
    <input name="FullName" type="text" required/>
    <label for="Email">Email</label>
    <input name="Email" type="email" required/>
    <label for="Username">Username</label>
    <input name="Username" type="text" required/>
    <label for="Password">password</label> 
    <input name="Password" type="password"  required/>
    <label for="ConfirmPassword">Confirm Password</label>
    <input name="ConfirmPassword" type="password" required/>
    <label for="Address">Address</label> <br>
    <input name="Address" type="text" required/>
    <button onclick="Register()">Register</button>
</div>


<script>
  'use strict'
  function Register(){
    const fullName = document.querySelector('#register input[name="FullName"]').value;
    const email = document.querySelector('#register input[name="Email"]').value;
    const username = document.querySelector('#register input[name="Username"]').value;
    const password = document.querySelector('#register input[name="Password"]').value;
    const confirmPassword = document.querySelector('#register input[name="ConfirmPassword"]').value;
    const address = document.querySelector('#register input[name="Address"]').value;
    @if(Environment.IsDevelopment())
    {
      <text>
        console.log(fullName);
        console.log(email);
        console.log(username);
        console.log(password);
      </text>
    }
    if ((/^\s*$/).test(address)){
      alert("address can't be empty")
      return 
    }
    if ((/^\s*$/).test(fullName)){
      alert("fullname can't be empty")
      return ;
    }
    if ((/\s/).test(username)){
      alert("username can't contain spaces");
      return;
    }
    if(password !== confirmPassword){
      alert('passwords do not match');
      return;
    }
    if (!(password.length >= 8 && password.match(/[0-9]/) 
      && (/[A-Z]/).test(password) 
      && (/[a-z]/).test(password)
      && (/[!#$%^&*()_+@("@")]/).test(password))){
      alert('password must be at least 8 characters long and contain at least one uppercase letter, one lowercase letter, one number and one special character');
      return;
    }
    if (!email.match(/^[a-zA-Z0-9._-]+@("@")[a-zA-Z0-9.-]+\.[a-zA-Z]{2,4}$/)){
      alert('invalid email');
      return;
    }
    fetch('/User/Register', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({
        fullName: fullName,
        email: email,
        username: username,
        password: password,
        address: address
      })
    })
    .then(data => {
      if(data.status === 200 || data.status === 201){
        alert('Registration successful');
        window.location.href = "/User/Login";
      }
      else {
        data.json().then(data => {
          alert(data.Message);
        })
      }
    })
  }
</script>
